services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports: ["5432:5432"]

  redis:
    image: redis:7
    ports: ["6379:6379"]

  emqx:
    image: emqx/emqx:5.7.0
    environment:
      EMQX_DASHBOARD__DEFAULT_USERNAME: admin
      EMQX_DASHBOARD__DEFAULT_PASSWORD: ${EMQX_PASSWORD}
    ports:
      - "1883:1883"
      - "8083:8083"
      - "18083:18083"
    restart: unless-stopped

  api:
    build: ./backend
    env_file: .env
    volumes:
      - ./backend:/app
    depends_on: [postgres, redis, emqx]
    ports: ["8000:8000"]
    environment:
      - PYTHONPATH=/app
  mqtt-worker:
    build: ./services/mqtt-worker
    env_file: .env
    volumes:
      - ./services/mqtt-worker:/app
    depends_on: [emqx, api]
    restart: unless-stopped

  teltonika-tcp:
    build:
      context: ./services/teltonika-tcp
    container_name: teltonika-tcp
    environment:
      API_BASE: http://api:8000
      LOG_LEVEL: DEBUG          # o INFO en prod
      LISTEN_HOST: 0.0.0.0
      LISTEN_PORT: "5027"
      REQUEST_TIMEOUT: "5.0"
    ports:
      - "5027:5027"
    depends_on:
      - api


  external-collector:
    build: ./services/external-collector
    container_name: external-collector
    environment:
      API_BASE: http://api:8000
      LOG_LEVEL: INFO
      STATE_FILE: /data/state.json
      IO_NAME_TO_ID: '{"externalVoltage":"66","ignition":"239"}'
      SOURCES_FILE: /etc/collector/sources.json
    volumes:
      - ./services/external-collector/sources.json:/etc/collector/sources.json:ro
      - ./data/collector:/data
    depends_on:
      - api


volumes:
  pgdata:
